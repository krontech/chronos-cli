## The stuff we want to build.
noinst_LIBRARIES = libcamera.a libcam-dbus.a
bin_PROGRAMS = cam-daemon cam-loader cam-pipeline cam-testdbus cam-json
AM_CFLAGS = -I ${srcdir}/lib

## Bundle the common FPGA and image sensor tools into a library.
libcamera_a_SOURCES = lib/board-chronos14.c
libcamera_a_SOURCES += lib/fpga-loader.c
libcamera_a_SOURCES += lib/fpga-mmap.c
libcamera_a_SOURCES += lib/i2c-eeprom.c
libcamera_a_SOURCES += lib/i2c-spd.c
libcamera_a_SOURCES += lib/lux1310-sensor.c
libcamera_a_SOURCES += lib/lux1310-wavetab.c
libcamera_a_SOURCES += lib/sensor.c
## Header files too.
libcamera_a_SOURCES += lib/fpga.h
libcamera_a_SOURCES += lib/fpga-gpmc.h
libcamera_a_SOURCES += lib/sensor-lux1310.h
libcamera_a_SOURCES += lib/i2c.h
libcamera_a_SOURCES += lib/i2c-spd.h

## Bundle the RPC client API into a library.
libcam_dbus_a_SOURCES = lib/cam-dbus.c
libcam_dbus_a_CFLAGS = -I ${prefix}/usr/include/dbus-1.0
libcam_dbus_a_CFLAGS += -I ${prefix}/usr/include/glib-2.0
libcam_dbus_a_CFLAGS += -I ${prefix}/usr/lib/glib-2.0/include

## CLI Program for manipulating the camera and image sensor.
#bin_PROGRAMS += cam-cli 
#cam_cli_LDADD = libcamera.a
#cam_cli_SOURCES = cli/main.c
#cam_cli_SOURCES += cli/cli-table.c
#cam_cli_SOURCES += cli/cli-help.c
#cam_cli_SOURCES += cli/cli-fpgaload.c
#cam_cli_SOURCES += cli/cli-info.c
#cam_cli_SOURCES += cli/cli-init.c
#cam_cli_SOURCES += cli/cli-led.c
#cam_cli_SOURCES += cli/cli-lux1310.c

## Camera Daemon
cam_daemon_LDADD = libcamera.a
cam_daemon_CFLAGS = ${AM_CFLAGS}
cam_daemon_CFLAGS += -I ${prefix}/usr/include/dbus-1.0
cam_daemon_CFLAGS += -I ${prefix}/usr/include/glib-2.0
cam_daemon_CFLAGS += -I ${prefix}/usr/lib/glib-2.0/include
cam_daemon_LDFLAGS = -L ${prefix}/usr/lib
cam_daemon_LDADD += -ldl -l:libdbus-glib-1.so.2 -l:libdbus-1.so.3 -lgmodule-2.0 -lgobject-2.0 -lm -lpthread -lgthread-2.0 -lrt -lglib-2.0
cam_daemon_SOURCES = daemon/main.c
cam_daemon_SOURCES += daemon/camera.c
cam_daemon_SOURCES += daemon/memory.c
cam_daemon_SOURCES += daemon/dbus-glue.c
cam_daemon_SOURCES += daemon/camera.h
cam_daemon_SOURCES += api/cam-dbus-server.h

## Camera DBus JSON translator
cam_json_CFLAGS = -I ${prefix}/usr/include/dbus-1.0
cam_json_CFLAGS += -I ${prefix}/usr/include/glib-2.0
cam_json_CFLAGS += -I ${prefix}/usr/lib/glib-2.0/include
cam_json_LDFLAGS = -L ${prefix}/usr/lib
cam_json_LDADD = -l:libdbus-glib-1.so.2 -l:libdbus-1.so.3 -lgobject-2.0 -lgthread-2.0 -lglib-2.0
cam_json_SOURCES = client/cam-json.c
cam_json_SOURCES += client/jsmn.c
cam_json_SOURCES += client/jsmn.h
cam_json_SOURCES += api/cam-dbus-client.h

## Camera DBus test
cam_testdbus_LDADD = libcam-dbus.a
cam_testdbus_CFLAGS = ${AM_CFLAGS}
cam_testdbus_CFLAGS += -I ${prefix}/usr/include/dbus-1.0
cam_testdbus_CFLAGS += -I ${prefix}/usr/include/glib-2.0
cam_testdbus_CFLAGS += -I ${prefix}/usr/lib/glib-2.0/include
cam_testdbus_LDFLAGS = -L ${prefix}/usr/lib
cam_testdbus_LDADD += -ldl -l:libdbus-glib-1.so.2 -l:libdbus-1.so.3 -lgmodule-2.0 -lgobject-2.0 -lm -lpthread -lgthread-2.0 -lrt -lglib-2.0
cam_testdbus_SOURCES = cam-testdbus.c
cam_testdbus_SOURCES += api/cam-dbus-client.h

## CLI Program to load the FPGA image and setup peripherals.
## TODO: This should ultimately be moved into a kernel module.
cam_loader_LDADD = libcamera.a
cam_loader_SOURCES = cam-loader.c

## GStreamer Daemon for running the video system.
cam_pipeline_LDADD = libcamera.a
cam_pipeline_CFLAGS = ${AM_CFLAGS}
cam_pipeline_CFLAGS += -I ${prefix}/usr/include/gstreamer-0.10
cam_pipeline_CFLAGS += -I ${prefix}/usr/include/glib-2.0
cam_pipeline_CFLAGS += -I ${prefix}/usr/lib/glib-2.0/include
cam_pipeline_LDFLAGS = -L ${prefix}/usr/lib -L ${prefix}/usr/lib/gstreamer-0.10
cam_pipeline_LDADD +=  -ldl -lgmodule-2.0 -lgobject-2.0 -lgstbase-0.10 -lgstreamer-0.10 -lm -lpthread -l:libxml2.so.2 -l:libz.so.1 -lgthread-2.0 -lrt -lglib-2.0
cam_pipeline_SOURCES = pipeline/cam-pipeline.c

##
## Autogenerated sources for DBus marshalling
##
EXTRA_DIST = api/com.krontech.chronos.control.xml
BUILT_SOURCES = api/cam-dbus-client.h api/cam-dbus-server.h

api/cam-dbus-client.h: api/com.krontech.chronos.control.xml
	dbus-binding-tool --prefix=cam_dbus --mode=glib-client $< > $@

api/cam-dbus-server.h: api/com.krontech.chronos.control.xml
	dbus-binding-tool --prefix=cam_dbus --mode=glib-server $< > $@
